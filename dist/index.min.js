"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var deepIncludePartial=require("deep-include-partial"),chai=require("chai"),fp=require("lodash/fp"),isEqualApprox=_interopDefault(require("is-equal-approx"));const errOf=(e,r,c,t)=>`\n\nCheck your source code or test,\nIt Should${c?" ":" NOT "}pass the '${t}' function ~\n    -------- your data:\n${JSON.stringify(e)}\n    -------- compared data:\n${JSON.stringify(r)}\n`,checkFit=(e,r,c=!0)=>chai.assert(deepIncludePartial.deepIncludePartial(e,r)===c,errOf(e,r,c,"checkFit")),checkFitApprox=(e,r,c=!0,t)=>chai.assert(deepIncludePartial.deepIncludePartial(e,r,(e,r)=>isEqualApprox(e,r,t))===c,errOf(e,r,c,"checkFitApprox")),checkEqual=(e,r,c=!0)=>chai.assert(fp.isEqual(e,r)===c,errOf(e,r,c,"checkEqual")),checkEqualApprox=(e,r,c=!0,t)=>chai.assert(isEqualApprox(e,r,t)===c,errOf(e,r,c,"checkEqualApprox")),checkError=chai.assert.throws;Object.defineProperty(exports,"ANY",{enumerable:!0,get:function(){return deepIncludePartial.ANY}}),Object.defineProperty(exports,"VOID",{enumerable:!0,get:function(){return deepIncludePartial.VOID}}),exports.checkEqual=checkEqual,exports.checkEqualApprox=checkEqualApprox,exports.checkError=checkError,exports.checkFit=checkFit,exports.checkFitApprox=checkFitApprox;
//# sourceMappingURL=index.min.js.map
